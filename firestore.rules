
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role from the app_users collection.
    function getUserData(userId) {
      return get(/databases/$(database)/documents/app_users/$(userId)).data;
    }

    // By default, deny all reads and writes.
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'customers' collection
    match /customers/{customerId} {
      // Any authenticated user can create, read, update, and delete customers.
      allow read, write: if request.auth != null;
    }

    // Rules for the 'sales' collection
    match /sales/{saleId} {
       // Any authenticated user can create, read, update, and delete sales.
      allow read, write: if request.auth != null;
    }

    // Rules for the 'defaults' (pending payments) collection
    match /defaults/{defaultId} {
       // Any authenticated user can manage default entries.
      allow read, write: if request.auth != null;
    }
    
    // Rules for the 'stockMovements' collection
    match /stockMovements/{movementId} {
       // Any authenticated user can manage stock movements.
      allow read, write: if request.auth != null;
    }

    // Rules for the 'app_users' collection (contains user roles)
    match /app_users/{userId} {
      // Any authenticated user can read their own user data.
      allow get: if request.auth != null && request.auth.uid == userId;

      // Any authenticated user can read the list of users (for display).
      allow list: if request.auth != null;

      // Only an Admin can create, update, or delete user records.
      // We check the role of the user MAKING the request.
      allow create, update, delete: if request.auth != null && getUserData(request.auth.uid).accessLevel == "Admin";
    }
  }
}
